<!--
////////////////////////////////////////////////////////////////////////////
//
// Epoxy - An independent flexible XAML MVVM library for .NET
// Copyright (c) Kouji Matsui (@kozy_kekyo, @kekyo@mastodon.cloud)
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
////////////////////////////////////////////////////////////////////////////
-->
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    
  <!-- ============================================================================= -->
  <!-- Properties definition -->

  <!-- ======================== -->
  <!-- Common -->
    
  <PropertyGroup>
    <EpoxyBuildEnable Condition="'$(EpoxyBuildEnable)' == ''">True</EpoxyBuildEnable>
    <EpoxyBuildTrace Condition="'$(EpoxyBuildTrace)' == ''">False</EpoxyBuildTrace>
  </PropertyGroup>

  <!-- ======================== -->
  <!-- Common (internal) -->

  <PropertyGroup Condition="('$(MSBuildRuntimeType)' == 'Core') AND ('$(MicrosoftNETBuildTasksTFM)' != '')">
    <_EB_PlatformName>$(MicrosoftNETBuildTasksTFM)</_EB_PlatformName>
  </PropertyGroup>
  <PropertyGroup Condition="('$(MSBuildRuntimeType)' == 'Core') AND ('$(MicrosoftNETBuildTasksTFM)' == '') AND ('$(BundledNETCoreAppTargetFrameworkVersion)' != '')">
    <_EB_PlatformName Condition="$(BundledNETCoreAppTargetFrameworkVersion) &gt;= 5.0">net$(BundledNETCoreAppTargetFrameworkVersion)</_EB_PlatformName>
    <_EB_PlatformName Condition="$(BundledNETCoreAppTargetFrameworkVersion) &lt; 5.0">netcoreapp$(BundledNETCoreAppTargetFrameworkVersion)</_EB_PlatformName>
  </PropertyGroup>
  <PropertyGroup Condition="('$(MSBuildRuntimeType)' == 'Core') AND ('$(MicrosoftNETBuildTasksTFM)' == '') AND ('$(BundledNETCoreAppTargetFrameworkVersion)' == '')">
    <_EB_PlatformName>netcoreapp2.0</_EB_PlatformName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(MSBuildRuntimeType)' != 'Core'">
    <_EB_PlatformName>net461</_EB_PlatformName>
  </PropertyGroup>

  <PropertyGroup>
    <_EB_ToolingDir>$([System.IO.Path]::Combine('$(_EB_ScriptBaseDir)','..','tools','$(_EB_PlatformName)'))</_EB_ToolingDir>
  </PropertyGroup>

  <!-- ======================== -->
  <!-- Custom task -->

  <UsingTask
    TaskName="GetCombinedReferencesBasePath"
    TaskFactory="RoslynCodeTaskFactory"
    AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll" >
    <ParameterGroup>
      <References ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
      <CombinedReferencesBasePath Output="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System"/>
      <Using Namespace="System.IO"/>
      <Using Namespace="System.Linq"/>
      <Using Namespace="Microsoft.Build.Framework"/>
      <Code Type="Fragment" Language="cs">
<![CDATA[
        CombinedReferencesBasePath = string.Join(";", References.
            Where(item => !string.IsNullOrWhiteSpace(item.ItemSpec)).
            GroupBy(item => Path.GetDirectoryName(Path.GetFullPath(item.ItemSpec))).
            Select(g => g.Key).
            Distinct());
]]>
      </Code>
    </Task>
  </UsingTask>
    
  <!-- ======================== -->
  <!-- Build target -->

  <Target Name="EpoxyBuild" AfterTargets="AfterCompile"
    Condition="'$(EpoxyBuildEnable)' == 'True'">
      
    <PropertyGroup>
      <EpoxyBuildToolingRuntimeName Condition="'$(EpoxyBuildToolingRuntimeName)' == ''">$(_EB_RuntimeName)</EpoxyBuildToolingRuntimeName>
      <EpoxyBuildToolingDir Condition="'$(EpoxyBuildToolingDir)' == ''">$([System.IO.Path]::GetFullPath('$(_EB_ToolingDir)'))</EpoxyBuildToolingDir>
      <EpoxyBuildToolingPath Condition="'$(EpoxyBuildToolingPath)' == ''">$([System.IO.Path]::Combine('$(EpoxyBuildToolingDir)','$(_EB_ExecutableName)'))</EpoxyBuildToolingPath>
    </PropertyGroup>

    <GetCombinedReferencesBasePath References="@(ReferencePath)">
      <Output TaskParameter="CombinedReferencesBasePath" PropertyName="CombinedReferencesBasePath" />
    </GetCombinedReferencesBasePath>
        
    <Exec WorkingDirectory="$(EpoxyBuildToolingDir)"
        Command="$(EpoxyBuildToolingRuntimeName)&quot;$(EpoxyBuildToolingPath)&quot; &quot;$(CombinedReferencesBasePath)&quot; &quot;$(ProjectDir)$(IntermediateOutputPath)$(TargetFileName)&quot; $(EpoxyBuildTrace)" />
  </Target>
</Project>
